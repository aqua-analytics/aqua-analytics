# 실험실 품질관리 대시보드 Docker Compose 설정
# Lab Analysis Dashboard Docker Compose Configuration

version: '3.8'

services:
  lab-dashboard:
    build: .
    container_name: lab-analysis-dashboard
    ports:
      - "${APP_PORT:-8501}:8501"
    environment:
      # 애플리케이션 설정
      - STREAMLIT_SERVER_PORT=8501
      - STREAMLIT_SERVER_ADDRESS=0.0.0.0
      - STREAMLIT_SERVER_HEADLESS=true
      - STREAMLIT_BROWSER_GATHER_USAGE_STATS=false
      
      # 로깅 설정
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - LOG_FORMAT=${LOG_FORMAT:-json}
      
      # 파일 처리 설정
      - MAX_FILE_SIZE=${MAX_FILE_SIZE:-50}
      - UPLOAD_TIMEOUT=${UPLOAD_TIMEOUT:-300}
      
      # 보안 설정
      - AUTO_DELETE_HOURS=${AUTO_DELETE_HOURS:-24}
      - MAX_CONCURRENT_USERS=${MAX_CONCURRENT_USERS:-20}
      
      # 성능 설정
      - MEMORY_LIMIT=${MEMORY_LIMIT:-1g}
      - CPU_LIMIT=${CPU_LIMIT:-1}
    
    volumes:
      # 데이터 볼륨 마운트
      - ./uploads:/app/uploads
      - ./data:/app/data
      - ./reports:/app/reports
      - ./logs:/app/logs
      - ./config:/app/config
    
    restart: unless-stopped
    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    # 리소스 제한
    deploy:
      resources:
        limits:
          memory: ${MEMORY_LIMIT:-1g}
          cpus: '${CPU_LIMIT:-1}'
        reservations:
          memory: 512m
          cpus: '0.5'

  # 모니터링 서비스 (선택사항)
  monitoring:
    image: prom/prometheus:latest
    container_name: lab-dashboard-monitoring
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    profiles:
      - monitoring
    depends_on:
      - lab-dashboard

networks:
  default:
    name: lab-dashboard-network